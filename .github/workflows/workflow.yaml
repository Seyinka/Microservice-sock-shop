name: CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.4  # Specify your Terraform version

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Specify your AWS region

      - name: Create S3 bucket
        run: |
           if aws s3api head-bucket --bucket "sock-bucket-seyi" >/dev/null 2>&1; then
              echo "Bucket already exists, skipping creation."
            else
              echo "Bucket does not exist, creating it."
              aws s3 mb s3://sock-bucket-seyi
            fi

      - name: Create DynamoDB table
        run: |
          if aws dynamodb describe-table --table-name "terraform-lock-seyi" >/dev/null 2>&1; then
            echo "DynamoDB table already exists, skipping creation."
          else
            aws dynamodb create-table \
              --table-name "terraform-lock-seyi" \
              --attribute-definitions AttributeName=LockID,AttributeType=S \
              --key-schema AttributeName=LockID,KeyType=HASH \
              --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
          fi

      - name: Terraform Init
        working-directory: terraform
        run: terraform init
    
      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply --auto-approve

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.27.4/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Install helm
        uses: azure/setup-helm@v4.2.00  # Specify your Helm version

      - name: Add Jetstack Helm Repository
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update

      - name: Install Cert-Manager
        run: |
          helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.15.2 --set crds.enabled=true

      - name: Add Prometheus Helm Repository
        run: |
          helm repo add prometheus https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Install Prometheus
        run: |
          helm install prometheus prometheus/kube-prometheus-stack -n sock-shop --timeout 10m0s

      - name: Configure kubeconfig
        run: |
          aws eks update-kubeconfig --name SockShop --region us-east-1

      - name: Deploy SockShop Resources
        run: |
          kubectl config set-context --current --namespace=sock-shop
          kubectl apply -f kubernetes/sockshop-deploy.yaml
          kubectl apply -f kubernetes/sockshop-ingress.yaml
          kubectl apply -f kubernetes/network-policies.yaml

      - name: Add Nginx Helm Repository
        run: |
          helm repo add nginx https://kubernetes.github.io/ingress-nginx
          helm repo update

      - name: Deploy Nginx Ingress Controller
        run: |
          helm install nginx-ingress nginx/ingress-nginx --namespace ingress-nginx --create-namespace

      - name: Validate Deployment
        run: |
          kubectl get pods,svc -n sock-shop
          kubectl describe ingress sockshop-ingress -n sock-shop
          kubectl get certificates -n sock-shop
